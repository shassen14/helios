# helios_sim/assets/scenarios/simple_car_scenario.toml

[simulation]
duration_seconds = 120.0

[world]
map_file = "maps/starter_world.glb"
gravity = [0.0, -9.81, 0.0]

[[agents]]
name = "RoboCar-01"
starting_pose = { translation = [0.0, 10.0, 1.0], rotation = [0.0, 0.0, 0.0] }
goal_pose = { position = [50.0, 0.5, 0.0] }

[agents.vehicle]
type = "Ackermann"
wheelbase = 2.5
max_steering_angle = 35.0 # deg
max_steering_rate = 140.0 # deg/sec

[[agents.sensors]]
kind = "Imu"
type = "SixDof"
name = "primary_imu"
rate = 100.0
accel_noise_stddev = [0.01, 0.01, 0.01]
gyro_noise_stddev = [0.01, 0.01, 0.01]
transform = { translation = [0.1, 0.0, 0.0] } # Example relative transform

# [[agents.sensors]]
# kind = "Imu"                            # The top-level kind for the SensorRegistry
# type = "NineDof"                        # The specific type for the IMU spawner to handle
# name = "secondary_imu"
# rate = 10.0
# accel_noise_stddev = [1.01, 1.01, 1.01]
# gyro_noise_stddev = [1.01, 1.01, 1.01]

[agents.autonomy_stack.world_model]
# Inside this table, we place the estimator and mapper configs.
# Serde will see these fields and correctly choose the `Separate` variant
# of the `WorldModelConfig` enum.

[agents.autonomy_stack.world_model.estimator]
kind = "Ekf"
process_noise = 0.01
dynamics = "IntegratedImu"

[agents.autonomy_stack.world_model.mapper]
kind = "None"

# [agents.autonomy_stack.estimator]
# # name = "ekf_main"
# kind = "Ekf"
# rate = 100.0
# process_noise = 0.01
# dynamics = "ConstantAcceleration"

# Placeholders for future modules
# [[agents.autonomy_stack.mappers]]
# type = "OccupancyGrid2D"
# rate = 5.0
# resolution = 0.1

[[agents.autonomy_stack.planners]]
type = "AStar"
rate = 2.0

[[agents.autonomy_stack.controllers]]
type = "Pid"
rate = 50.0
kp = 1.0
ki = 0.1
kd = 0.2
